- set_page_title @person.name
= render 'shared/flag_resolution', item: @person
= render 'merge_modal'
- content_for :pills do
  - if can_people? || can?(:read, Person)
    = link_to 'View All', people_path, class: 'btn btn-light'
  - if can?(:create, Flag)
    = render 'shared/flag_it', item: @person, item_class: 'btn btn-light'
  - if can?(:update, @person)
    = link_to [:edit, @person], class: 'btn btn-light' do
      i.fa.fa-pencil
      span.d-none.d-lg-inline
        | &nbsp; Edit
  - if can?(:destroy, @person) && @person.census_records.blank?
    = link_to @person, class: 'btn btn-light', data: { method: :delete, confirm: 'Are you sure?' } do
      i.fa.fa-trash
      span.d-none.d-lg-inline
        | &nbsp; Delete
.list-group.mb-3
  - names = @person.non_variant_names
  - if names.any?
    .list-group-item
      .row
        .col-6 Name Variants
        .col-6
          -names.each do |name|
            div= name.name
  .list-group-item
    .row
      .col-6 Person ID
      .col-6= @person.id
  .list-group-item
    .row
      .col-6 About
      .col-6
        = "#{Translator.option(:race, @person.race)} " if @person.race.present? && @person.race != 'on'
        = "#{Translator.option(:sex, @person.sex)} " if @person.sex.present? && @person.sex != 'on'
        - if @person.birth_year
          = "born in #{@person.birth_year}"
  - if @person.description.present?
    .list-group-item
      = simple_format @person.description
.card.mb-3
  .card-header Census Records
  = table do
    thead
      tr
        th Year
        th Name
        th
          | Relation
          span.d-none.d-lg-inline &nbsp;to Head
        th Address
        th Age
        th Race
        th POB
        th Marriage
        th Occupation
    tbody
      - @person.census_records.each do |raw_row|
        - row = raw_row.decorate
        tr
          td= row.year
          td.text-nowrap= link_to row.name, row
          td= row.relation_to_head if row.year >= 1880
          td.text-nowrap= row.street_address
          td= row.age
          td= row.race
          td= row.pob
          td= row.marital_status
          td= row.occupation

- if @person.relatives.present?
.card.mb-3
  .card-header Relatives
  = table do
    thead
      tr
        th Year
        th Name
        th
          | Relation
          span.d-none.d-lg-inline &nbsp;to Head
        th Race
        th Sex
        th YOB
        th Occupation
    tbody
      - @person.relatives.each do |raw_row|
        - row = raw_row.decorate
        tr
          td= row.census_records.map(&:year).sort.join(', ')
          td.text-nowrap= link_to row.name, row
          td= row.relation_to_head
          td= "#{Translator.option(:race, row.race)} " if row.race.present? && row.race != 'on'
          td= "#{Translator.option(:sex, row.sex)} " if row.sex.present? && row.sex != 'on'
          td= row.birth_year
          td= row.occupation


- if can?(:update, @person) && @person.possible_unmatched_records.present?
  .card.mb-3
    .card-header Possible Census Records
    = table do
      thead
        tr
          th Year
          th Name
          th
            | Relation
            span.d-none.d-lg-inline &nbsp;to Head
          th Address
          th Age
          th Race
          th POB
          th Marriage
          th Occupation
          th
      tbody
        - @person.possible_unmatched_records.each do |row|
          tr
            td= row.year
            td.text-nowrap= link_to row.name, row
            td= row.relation_to_head if row.year >= 1880
            td.text-nowrap= row.street_address
            td= row.age
            td= row.race
            td= row.pob
            td= row.marital_status if row.year >= 1880
            td= row.occupation
            td
              = form_for row do |form|
                = hidden_field_tag 'census_record[person_id]', @person.id
                = hidden_field_tag 'context', 'person'
                = form.submit 'Match!', class: 'btn btn-sm btn-secondary'

= render 'media/display_on_associated_record', item: @person

- narratives = @person.narratives.accessible_by(current_ability)
.card class="#{narratives.blank? ? 'mb-3' : 'empty-card'}"
  .card-header
    = link_to 'Add Source/Narrative', new_person_narrative_path(@person), class: 'float-right'
    | Sources &amp; Narratives
  - if narratives.blank?
    .card-body
      p.lead No sources or narratives yet for this person.

- if narratives.present?
  .list-group
    - narratives.each do |narrative|
      = render 'narratives/narrative', narrative:

- if @person.notes? && can?(:update, @person)
  .card.mb-3
    .card-header
      | Additional Notes
    .card-body
      = simple_format @person.notes

- if can?(:update, @person)
  = render 'shared/change_history', item: @person
